plugins {
    id "java"
    id "idea"
    id "application"
    id "org.openjfx.javafxplugin" version "0.0.8"
    id "org.beryx.jlink" version "2.12.0"
}

configure(project) {
    mainClassName = "$moduleName/me.mdbell.noexs.Main"

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

dependencies {
    compile project(":noexs-utils")

    compile "org.usb4java:usb4java:1.3.0"
    compile "org.usb4java:usb4java-javax:1.3.0"
    compile "com.google.code.gson:gson:2.8.5"
}

javafx {
    version = "11.0.2"
    modules = ["javafx.base", "javafx.graphics", "javafx.controls", "javafx.fxml"]
}

jlink {
    options = ["--strip-debug", "--compress", "2", "--no-header-files", "--no-man-pages"]
    launcher {
        name = "noexs"
    }
    imageZip = file("$buildDir/image-zip/noexs.zip")
}

jar {
    archiveFileName = 'noexs-app.jar'

    manifest {
        attributes(
            'Main-Class': "me.mdbell.noexs.Main",
            'Implementation-Title': project.name,
            'Implementation-Vendor': project.group,
            'Implementation-Version': project.version,
            'Class-Path': configurations.runtime.collect { it.getName() }.join(' ')
        )
    }
//    from {
//        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
//    }
}

task fatJar(type: Jar) {
    manifest.from jar.manifest

    from(configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude 'META-INF/rxjava.properties'
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }

    with jar
}

artifacts {
    archives fatJar
}
